NOTAS PREVIAS
=============

--Aunque en el Vortex86 EX (Tinyllama) se solucionan los problemas de EMS cargando SMARTDRV desde el CONFIG.SYS,
  en el Vortex86 DX NO DEBES CARGARLO, ya que afecta a la compatibilidad: por ejemplo, el "Arkania 2: Startrail"
  NO FUNCIONA con el SMARTDRV cargado.
  
NOTAS AVANZADAS (NO TIENEN UTILIDAD REAL DE MOMENTO)
====================================================

--Para dumpear y flashear la BIOS del Vortex86 DX, se usa un programa llamado BIOSMP.EXE, que es del fabricante
pero lo tienes en hilo: https://www.vogons.org/viewtopic.php?f=46&t=85448
--La gráfica del Vortex86 DX que lleva el Pixel86 es una "VOLARI Z29S".
--Tienes un hilo donde se investigan las particularidades del Vortex86 DX para juegos en estos hilos:
https://www.vogons.org/viewtopic.php?f=46&t=85448
https://www.vogons.org/viewtopic.php?t=86603
--Se puede extraer sólo la VIDEO CARD ROM de la BIOS dumpeada con AMI MMTOOL, y se le puede inyectar otra VIDEO CADR ROM distinta.
  Viene hacia la mitad de https://www.vogons.org/viewtopic.php?t=86603

ARRANQUE DEL SISTEMA
====================

El sistema arranca desde SD. La tarjeta se prepara igual que para el Tinyllama.
En la BIOS, puedes seleccionar si quieres arrancar desde la SD o desde un pendrive USB.

SONIDO MEDIANTE EL CHIP CRYSTAL
===============================

Debes flashear la ROM de la Orpheus (disponible en https://pixelx86.com/downloads/drivers/dx/Orpheus_EEPROM_v2.zip,
pero debería estar en más sitios porque en realidad no es del proyecto Pixel 86), con el comando "FLASH.COM"
y cuando te salga el menú, eliges la primera opción (la que pone "330"), le metes un power-cycling y ya debería ir el audio.

EN PIXEL 86 DX: USA SIEMPRE EL IRQ 7
Por lo tanto, la variable BLASTER la tendremos así en el AUTOEXEC.BAT:
SET BLASTER=A220 I7 D1 T4 P330

EN PIXEL86 MINI: USA SIEMPRE EL IRQ 5, NO USES EL 7: Con el 7 parece que funciona pero fallan cosas como los FX en el Doom, Tyrian, Duke3D, etc.
Esto es así porque el IRQ 5 está reservado para el speaker o algo así.
Por lo tanto, la variable BLASTER la tendremos así en el AUTOEXEC.BAT:
SET BLASTER=A220 I5 D1 T4 P330

..Y ya el UNISOUND usará esos valores siempre (la mayoría de los juegos no usan la variable BLASTER de todos modos,
así que si no la estableces, UNISOUND usará el IRQ 5 que es el que tiene asignado la CRYSTAL en la EEPROM).

DREAMBLASTER S2
===============

Para ponerla en modo MT32, necesitamos el archivo GMGSMT32.zip de este hilo:
https://www.vogons.org/viewtopic.php?p=773606#p773606
Y el banco GMBK5X128_203.zip de aquí:
http://serdaco.com/downloads/X2/X2_SoundbankPack/?m&dir=GM/Dream/
Entonces:
First, make sure you download the latest 2.03 Dream bank referred by dreamblaster and upload it to your X2 (no sé cómo se hace lo de subirlo).
Then for switching your X2 to MT-32 mode use 'MT32.BAT'. To switch back to GM/GS mode use 'GM.BAT'/'GS.BAT' correspondingly.

NOTAS HIDMAN
============

--Para que teclado y ratón salgan por un solo puerto PS/2 (y así no tener que usar una bifurcación y dos cables, sino usar un sólo cable PS/2)
  tienes que entrar en el menú del HIDMAN (se hace entrando en EDIT.COM y manteniendo pulsado el botón del HIDMAN durante unos segundos)
  y allí activar "PS/2 AUX OUTPUT" en la sección "ADV."

--Para que funcione el teclado 8BitDo, en el menú del HIDMAN activa "Advanced Keyboard" en la sección "KEYBOARD".

FLASHEAR HIDMAN DESDE GNU/LINUX (Es seguro siguiendo estas instrucciones EXACTAS, pero si acaba en brickeo lo puedes recuperar fácil, mira más abajo)
=====================================================================================================================================================

--Instalamos el programa de flasheo (hazlo así, NO lo hagas bajando el .py a mano ni nada raro o acabará la cosa en brickeo):
python3 -mpip install ch55xtool

--Nos bajamos el firmware de:
https://github.com/rasteri/HIDman/releases

--Flasheamos así:
sudo ch55xtool -f hidman_v1.1.5j.bin
(Sí, en teoría en Linux se usa el .BIN en vez del .HEX como en Windows).

FLASHEAR HIDMAN DESDE WINDOWS (No hace falta, desde Linux va bien si sigues las instrucciones)
==============================================================================================

--Nos bajamos el programa de flasheo: 

--Nos bajamos el firmware de aquí (OJO: SE USA EL .HEX):
https://github.com/rasteri/HIDman/releases

--En el programa de flasheo:
En "DOWNLOAD FILE -> OBJECT FILE 1", seleccionamos el archivo ".HEX"
En "DOWNLOAD CONFIG" marcamos "CLEAR DATA FLASH"
Le damos al botón "DOWNLOAD". Nos tiene que decir que "Succeeded!"

RECOVERY DE UN MAL FLASHEO DEL HIDMAN
=====================================

Simplemente con puentear el condensador marcado como C5 mientras conectamos el USB ya se pone en modo flasheo
aunque haya ido mal el flasheo anterior. Lo más fácil es coger un destornillador pequeño y poner en contacto los dos bornes del condensador.
Una vez conectado el USB, ya podemos soltar el destornillador o lo que usemos.

Antes de intentar flashear, nos tiene que salir en "lsusb" como:
Bus 001 Device 009: ID 4348:55e0 WinChipHead
Si no te sale así en "lsusb", es que no lo has hecho bien y fallará el flasheo. 
