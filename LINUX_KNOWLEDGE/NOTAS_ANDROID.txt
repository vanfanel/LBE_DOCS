ROOTEAR MÓVIL SAMSUNG: EJEMPLO 1
===================================

En el ejemplo se ha usado el samsung Grand Prime, cuyo número de modelo es G531F.
Así mismo, en este ejemplo lo que se hace es flashear la partición SYSTEM por otra que ya viene rooteada.

Necesitamos el Heimdall. Para compilarlo, necesitamos los siguientes paquetes instalados:
build-essential cmake zlib1g-dev libusb-1.0-0-dev qt5-default
(En DEBIAN BULLSEYE, cambia qt5-default por qtbase5-dev)

Ahora clonamos desde:
https://github.com/Benjamin-Dobell/Heimdall.git

Creamos el directorio de compilación y configuramos con:
cmake -DCMAKE_BUILD_TYPE=Release ..

Luego make -j8 y listo. Copiamos heimdall y heimdall-frontend a /usr/bin
Ya lo tenemos listo...

Ahora conectamos el teléfono por USB, reiniciamos el teléfono en modo DOWNLOAD (botón de encendido + botón central + bajar volúmen) 
y lanzamos heimdall-frontend como root:
sudo heimdall-frontend

Ahora vamos a la pestaña Utilities y le damos a Detect. Nos tiene que decir que lo ha detectado. Listo.
Ahora necesitamos el PIT del teléfono, o sea, la tabla de particiones de su flash interna. La descargamos y la guardamos en un
fichero .PIT, ahí  mismo en la pestaña Utilities.
Ahora, nos vamos a la pestaña Flash, y cargamos el .PIT que conseguimos antes.
Tras eso, en Flash también, le damos a Add, y elegimos, en "Partition details", SYSTEM.
Como vemos, eso hará que el botón BROWSE busque un .IMG, que debería llamarse SYSTEM.IMG. Se lo damos, si es
que es esa la partición que vamos a reflashear.
Le damos a "Flash", esperamos, y listo. Si al reiniciarse tenemos el SuperSU instalado, todo ha ido bien.

NOTA: Puede ser que la partición que vayamos a sustituir en la flash del teléfono sea otra. O sea, que en vez de system sea
otra diferente. Pues elegimos el tipo de partición correspondiente tras darle a ADD, en PARTITION NAME, elegimos el
archivo correspondiente en BROWSE, y flasheamos. Es muy fácil una vez que entiendes esto de "qué tipo de partición es la
que vamos a flashear".

NOTA2: Si falla algo, podemos dejar el teléfono de fábrica con el modo recovery (reiniciar teniendo pulsado: 
botón de encendido + botón central + bajar volúmen) y luego allí "delete data / factory reset". En ese menú nos movemos
usando los botones de volúmen y el de encendido para confirmar. Perderemos el rooteo, eso sí. 

TRAS ESTO, instalamos FDROID, y luego desde el FDROID la YALP STORE, para poder instalar apps sin tener los servicios
de google desde la YALP STORE esta.
Asi mismo, installamos el TITANIUM BACKUP (versión no de pago!) para desinstalar apps y servicios, incluidos los de sistema.
Para música, DROIDSOUND-E (se baja el APK desde su página en github) y MATERIAL PLAYER por si necesitas bookmarks. Y ya.

ROOTEAR MÓVIL SAMSUNG: EJEMPLO 2
===================================

Se trata de un G130HN, o Galaxy Young 2.
En este caso, usamos igualmente heimdall pero tenemos todas las particiones en un .RAR. 

RESTAURAR UN BACKUP DE TWRP
===========================

A veces nos encontraremos con que una ROM entera se distribuye como un backup del teléfono hecho con TWRP.
Para flashear este backup desde el propio TWRP, dado que TWRP guarda sus backups en carpetas con nombres
autogenerados dentro de TWRP/BACKUPS (en la SD, por ejemplo), pues lo que hacemos es generar un backup nosotros
en el TWRP, y luego sobreescribir los archivos del backup que hemos hecho por los del backup que queremos instalar.
Luego le damos a RESTORE y ya debería encontrarnos el backup para restaurarlo.

Para reiniciar en modo TWRP (recovery mode) en el G531F es VOLUME UP + BOTÓN CENTRAL + POWER ON

NOTA: UNLOCK BOOTLOADER
=========================

En algunos teléfonos, al instalar un custom recovery (TWRP) luego no arranca ese recovery sino el de fábrica. Eso es porque antes de flashearlo tienes 
que unlockear el bootloader. Es en opciones de desarrollador, OEM UNLOCK. Lo activas y flasheas con el HEIMDALL, como root (con SUDO) y ya irá.

NOTA: ERROR STATUS 7 AL INSTALAR UN ZIP DESDE UN CUSTOM RECOVERY
================================================================

Básicamente es porque el ZIP tiene un script de instalación que checkea el modelo de móvil y si no coincide no se instala. A la mierda con eso.
Nosotros lo queremos instalar y que se joda.
Abrimos el ZIP, nos vamos a ANDROID en META_INF – COM – GOOGLE, y eliminamos las líneas del ASSERT que comprueba el nombre del movil. Y ya.

LIDIAR CON NOTIFICACIONES DE LA APLICACIÓN "TELÉFONO" TRAS DESHABILITAR LOS SERVICIOS DE "GOOGLE PLAY SERVICES"
===============================================================================================================

El problema es que la app de "Teléfono" no deja deshabilitar estas notificaciones tan pesadas.
Por ello, deshabilitamos la app "Teléfono" (que no se llama así under the hood):

adb shell pm disable-user --user 0 com.google.android.dialer

...Y nos instalamos "Simple Dialer" que está en F-Droid, y la establecemos como app de marcaje telefónico predeterminada.

Con G-Board nos pasará lo mismo, así que primero instalamos "Simple Keyboard" y a continuación deshabilitamos G-Board,
que en este caso sí es posible hacerlo desde la gestión de aplicaciones del propio Android sin tener que recurrir a ADB.

DESINSTALAR COSAS CON ADB (NO HACE FALTA ROOT)
==============================================

LO PRIMERO entramos en ADB.

Podemos listar TODO lo que hay instalado con:
pm list packages | grep <loquesea_que_busquemos>

Listar lo que hay instalado como APK:
pm list packages -f

Ahora, podemos borrar por ejemplo google Play store:
com.android.vending

Podemos borrar los servicios de google:
com.google.android.gms

Podemos borrar Google Chrome:
pm uninstall -k --user 0 com.android.chrome

Si quieres una lista de BLOATWARE por compañía, aquí hay una:
https://www.droidwin.com/remove-uninstall-bloatware-apps-from-android-via-adb-commands/#Google_Bloatware
PERO recuerda que donde pone com.google.android.<loquesea>, quita la parte de "google".
